# "org" ensures this Service is used with the correct Serverless Framework Access Key.
org: kelvinkamara
# "app" enables Serverless Framework Dashboard features and sharing them with other Services.
app: aws-node-http-api-project
# "service" is the name of this project. This will also be added to your AWS resource names.
service: aws-node-http-api-project

provider:
  name: aws
  runtime: nodejs20.x
  region: eu-west-2
  iam:
    role:
      statements:
        - Effect: "Allow"
          Action:
            - "dynamodb:PutItem"
            - "dynamodb:Get*"
            - "dynamodb:Scan*"
            - "dynamodb:UpdateItem"
            - "dynamodb:DeleteItem"
          Resource: arn:aws:dynamodb:${aws:region}:${aws:accountId}:table/${self:service}-customerTable-${sls:stage}
  environment:
    DYNAMODB_CUSTOMER_TABLE: ${self:service}-customerTable-${sls:stage}

functions:
  createCustomer:
    handler: createCustomer.createCustomer
    events:
      - httpApi:
          path: /
          method: post
  getCustomers:
    handler: getCustomers.getCustomers
    events:
      - httpApi:
          path: /customers
          method: get

resources:
  Resources:
    CustomerTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: primary_key
            AttributeType: S
        BillingMode: PAY_PER_REQUEST
        KeySchema:
          - AttributeName: primary_key
            KeyType: HASH
        TableName: ${self:service}-customerTable-${sls:stage}
